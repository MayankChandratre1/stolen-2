{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"https://timebank2.vercel.app/api/transactions\";\n\n// ✅ Earn Credits\nexport const earnCredits = async skillId => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    throw new Error(\"No authentication token found\");\n  }\n  console.log(`Earning credits for skill: ${skillId}`);\n  const res = await axios.post(`${API_URL}/earn`, {\n    skillId\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  console.log(\"Earn credits response:\", res.data);\n  return res.data;\n};\n\n// ✅ Spend Credits\nexport const spendCredits = async skillId => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    throw new Error(\"No authentication token found\");\n  }\n  console.log(`Spending credits for skill: ${skillId}`);\n  const res = await axios.post(`${API_URL}/spend`, {\n    skillId\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  console.log(\"Spend credits response:\", res.data);\n  return res.data;\n};\n\n// ✅ Get Transaction History\nexport const getTransactionHistory = async () => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    throw new Error(\"No authentication token found\");\n  }\n  console.log(\"Fetching transaction history...\");\n\n  // Using fetch instead of axios for direct debugging\n  const response = await fetch(API_URL, {\n    method: \"GET\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (!response.ok) {\n    const errorText = await response.text();\n    console.error(\"Transaction history error response:\", errorText);\n    throw new Error(`Failed to fetch transaction history: ${response.status}`);\n  }\n  const data = await response.json();\n  console.log(\"Transaction history response:\", data);\n  return data;\n};","map":{"version":3,"names":["axios","API_URL","earnCredits","skillId","token","localStorage","getItem","Error","console","log","res","post","headers","Authorization","data","spendCredits","getTransactionHistory","response","fetch","method","ok","errorText","text","error","status","json"],"sources":["C:/GOG Games/project-1/client/src/services/transactionService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"https://timebank2.vercel.app/api/transactions\";\r\n\r\n// ✅ Earn Credits\r\nexport const earnCredits = async (skillId) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) {\r\n    throw new Error(\"No authentication token found\");\r\n  }\r\n  \r\n  console.log(`Earning credits for skill: ${skillId}`);\r\n  \r\n  const res = await axios.post(\r\n    `${API_URL}/earn`,\r\n    { skillId },\r\n    { headers: { Authorization: `Bearer ${token}` } }\r\n  );\r\n  \r\n  console.log(\"Earn credits response:\", res.data);\r\n  return res.data;\r\n};\r\n\r\n// ✅ Spend Credits\r\nexport const spendCredits = async (skillId) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) {\r\n    throw new Error(\"No authentication token found\");\r\n  }\r\n  \r\n  console.log(`Spending credits for skill: ${skillId}`);\r\n  \r\n  const res = await axios.post(\r\n    `${API_URL}/spend`,\r\n    { skillId },\r\n    { headers: { Authorization: `Bearer ${token}` } }\r\n  );\r\n  \r\n  console.log(\"Spend credits response:\", res.data);\r\n  return res.data;\r\n};\r\n\r\n// ✅ Get Transaction History\r\nexport const getTransactionHistory = async () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) {\r\n    throw new Error(\"No authentication token found\");\r\n  }\r\n  \r\n  console.log(\"Fetching transaction history...\");\r\n  \r\n  // Using fetch instead of axios for direct debugging\r\n  const response = await fetch(API_URL, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorText = await response.text();\r\n    console.error(\"Transaction history error response:\", errorText);\r\n    throw new Error(`Failed to fetch transaction history: ${response.status}`);\r\n  }\r\n\r\n  const data = await response.json();\r\n  console.log(\"Transaction history response:\", data);\r\n  return data;\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,+CAA+C;;AAE/D;AACA,OAAO,MAAMC,WAAW,GAAG,MAAOC,OAAO,IAAK;EAC5C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI,CAACF,KAAK,EAAE;IACV,MAAM,IAAIG,KAAK,CAAC,+BAA+B,CAAC;EAClD;EAEAC,OAAO,CAACC,GAAG,CAAC,8BAA8BN,OAAO,EAAE,CAAC;EAEpD,MAAMO,GAAG,GAAG,MAAMV,KAAK,CAACW,IAAI,CAC1B,GAAGV,OAAO,OAAO,EACjB;IAAEE;EAAQ,CAAC,EACX;IAAES,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUT,KAAK;IAAG;EAAE,CAClD,CAAC;EAEDI,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEC,GAAG,CAACI,IAAI,CAAC;EAC/C,OAAOJ,GAAG,CAACI,IAAI;AACjB,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAG,MAAOZ,OAAO,IAAK;EAC7C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI,CAACF,KAAK,EAAE;IACV,MAAM,IAAIG,KAAK,CAAC,+BAA+B,CAAC;EAClD;EAEAC,OAAO,CAACC,GAAG,CAAC,+BAA+BN,OAAO,EAAE,CAAC;EAErD,MAAMO,GAAG,GAAG,MAAMV,KAAK,CAACW,IAAI,CAC1B,GAAGV,OAAO,QAAQ,EAClB;IAAEE;EAAQ,CAAC,EACX;IAAES,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUT,KAAK;IAAG;EAAE,CAClD,CAAC;EAEDI,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEC,GAAG,CAACI,IAAI,CAAC;EAChD,OAAOJ,GAAG,CAACI,IAAI;AACjB,CAAC;;AAED;AACA,OAAO,MAAME,qBAAqB,GAAG,MAAAA,CAAA,KAAY;EAC/C,MAAMZ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI,CAACF,KAAK,EAAE;IACV,MAAM,IAAIG,KAAK,CAAC,+BAA+B,CAAC;EAClD;EAEAC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;;EAE9C;EACA,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAACjB,OAAO,EAAE;IACpCkB,MAAM,EAAE,KAAK;IACbP,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUT,KAAK,EAAE;MAChC,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EAEF,IAAI,CAACa,QAAQ,CAACG,EAAE,EAAE;IAChB,MAAMC,SAAS,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IACvCd,OAAO,CAACe,KAAK,CAAC,qCAAqC,EAAEF,SAAS,CAAC;IAC/D,MAAM,IAAId,KAAK,CAAC,wCAAwCU,QAAQ,CAACO,MAAM,EAAE,CAAC;EAC5E;EAEA,MAAMV,IAAI,GAAG,MAAMG,QAAQ,CAACQ,IAAI,CAAC,CAAC;EAClCjB,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEK,IAAI,CAAC;EAClD,OAAOA,IAAI;AACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}